# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  Build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
  Docker_Scan:
    
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build an image from Dockerfile
        run: |
          docker build -t docker.io/jaivignesh-vunet/maven-myproject:${{ github.sha }} .
          
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/jaivignesh-vunet/maven-myproject:${{ github.sha }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          
      - name: Run Trivy vulnerability scanner (Sarif)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/jaivignesh-vunet/maven-myproject:${{ github.sha }}'
          format: 'sarif'
          output: 'docker-results.sarif'
          
      - name: Upload Trivy scan results as artifact
        uses: actions/upload-artifact@v2
        with:
          name: docker-results
          path: docker-results.sarif
          
          
  Repo_Scan:

      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
  
        - name: Run Trivy vulnerability scanner in repo mode
          uses: aquasecurity/trivy-action@master
          with:
            scan-type: 'fs'
            ignore-unfixed: true
            format: 'sarif'
            output: 'Repo-results.sarif'
            severity: 'CRITICAL,HIGH'
            
        - name: Upload Trivy scan results as artifact
          uses: actions/upload-artifact@v2
          with:
            name: Repo-results
            path: Repo-results.sarif
            
            
  Roofus_scan:
    
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner with rootfs command
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'rootfs'
          scan-ref: 'rootfs-example-binary'
          ignore-unfixed: true
          format: 'sarif'
          output: 'Roofus-results.sarif'
          severity: 'CRITICAL,HIGH'
          
      - name: Upload Trivy scan results as artifact
        uses: actions/upload-artifact@v2
        with:
            name: Roofus-results
            path: Roofus-results.sarif    
            
            
            
  Infrastructure_ascode:
    
      runs-on: ubuntu-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          hide-progress: false
          format: 'sarif'
          output: 'Infra-results.sarif'
          exit-code: '1'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
          
      - name: Upload Trivy scan results as artifact
        uses: actions/upload-artifact@v2
        with:
            name: Infra-results
            path: Infra-results.sarif    
          

      
        
        
      

    
